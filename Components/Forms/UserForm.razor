@inject UserService service
@inject NavigationManager navigationManager

<EditForm Model=@model FormName="Users" Enhance="true" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="grid">
        <div>
            <label for="username">User Name</label>
            <InputText id="Username" @bind-Value="model.Username" />
            <ValidationMessage For="@(() => model.Username)" />
        </div>
    </div>
    <div class="grid">
        <div>
            <label for="email">Email</label>
            <InputText type='email' id="email" @bind-Value="model.Email"/>
            <ValidationMessage For="@(() => model.Email)"/>
        </div>
        <div>
            <label for="password">Password</label>
            <InputText type='password' 
                id="password" 
                @bind-Value='model.Password' 
                disabled="@(formMode == FormMode.Edit)"/>
            <ValidationMessage For="@(() => model.Password)" />
        </div>
        <div>
            <label for="confirm-password">Confirm Password</label>
            <InputText 
                type='password' 
                id="confirm-password" 
                @bind-Value='model.ConfirmPassword' 
                disabled="@(formMode == FormMode.Edit)"/>
            <ValidationMessage For="@(() => model.ConfirmPassword)" />
        </div>
    </div>
    <button type="submit">Submit</button>
</EditForm>

@code {
    [Parameter] public FormMode formMode { get; set; } = FormMode.New;
    [Parameter] public string? userId {get; set;}
    public UserDTO model { get; set; } = new();
    
    protected override async Task OnInitializedAsync()
    {
        if (formMode == FormMode.Edit && userId is not null) 
        {
            var userOnDb = await service.Get(userId);
            
            if(userOnDb is not null)
            {
                model = userOnDb;
            }
        }
    }
    
    async Task HandleValidSubmit()
    {
        if (formMode == FormMode.New)
        {
            await service.Create(model);
        }
        if (formMode == FormMode.Edit && userId is not null) 
        {
            await service.Update(model, userId);
        }

        navigationManager.NavigateTo("/users");
    }
} 

